# ===========================================
# DEVELOPMENT ENVIRONMENT CONFIGURATION
# ===========================================

# Server Configuration
HOST=0.0.0.0
PORT=8080
NODE_ENV=development

# Security - CHANGE THIS TO A STRONG SECRET!
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
AUTH_TOKEN=dev-auth-token-change-in-production

# Hex Encryption Key - Generate with: node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"
HEX_ENCRYPTION_KEY=dev1234567890abcd

# CORS Configuration
# Use * for all origins or specify comma-separated domains
ALLOWED_ORIGINS=*

# MongoDB Configuration - Docker deployment
MONGODB_URI=mongodb://mongo:27017/proxy_dev
MONGO_URI=mongodb://mongo:27017/proxy_dev
MONGO_MAX_POOL_SIZE=10
MONGO_SERVER_SELECTION_TIMEOUT=5000
MONGO_SOCKET_TIMEOUT=45000
# Advanced MongoDB options
MONGO_OPTIONS_STRING=retryWrites=true&w=majority

# Redis Configuration - Docker deployment
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_URL=redis://redis:6379
REDIS_DB=0
REDIS_MAX_RETRIES=3

# Proxy Configuration
PROXY_TIMEOUT=30000
MAX_REQUEST_SIZE=10mb
COMPRESSION_ENABLED=true

# Metrics Configuration
METRICS_ENABLED=true
METRICS_RETENTION_DAYS=3

# WebSocket Configuration
WS_MAX_COMPRESSED_SIZE=65536
WS_MAX_BACKPRESSURE=65536
WS_PING_INTERVAL=30000

# Logging Configuration
LOG_LEVEL=debug
LOG_FORMAT=json
FORCE_CONSOLE_OUTPUT=true

# Performance Configuration
MAX_CONCURRENT_REQUESTS=100
REQUEST_RATE_LIMIT=50
DEVICE_CACHE_TTL=1800

# Security Headers & Rate Limiting
CORS_ORIGINS=*
RATE_LIMIT_WINDOW=900000
RATE_LIMIT_MAX_REQUESTS=100
MAX_CONNECTIONS=100

# Development Configuration
DEBUG_MODE=true
MOCK_RESPONSES=false
SIMULATE_LATENCY=0
